image: heptacom/shopware-6-plugin-pipeline:php83-node20-latest

definitions:
    steps:
        -   step: &default-step
                caches:
                    - composer
                clone:
                    depth: 1
                after-script:
                    - cp -a .build test-results
                    - find test-results -type f -name '*.xml' -exec sed -i .bak -e "s|`pwd`/||" {} +
                    - find test-results -type f ! -name '*.xml' -delete
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || composer config --list'
        -   step: &github-keyword-gate-step
                <<: *default-step
                name: Github Keyword Gate
                script:
                    - 'test $(git --no-pager log --full-history "--grep=${GITHUB_GREP_DENY_PATTERN}" | wc -l) -eq 0'
                    - 'test $(git --no-pager log --full-history -S "${GITHUB_GREP_DENY_PATTERN}" --pickaxe-all --pickaxe-regex --oneline | wc -l) -eq 0'
                after-script:
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || git --no-pager log --full-history "--grep=${GITHUB_GREP_DENY_PATTERN}"'
                    - 'test ${BITBUCKET_EXIT_CODE} -eq 0 || git --no-pager log --full-history -S "${GITHUB_GREP_DENY_PATTERN}" --pickaxe-all --pickaxe-regex --oneline'
        -   step: &github-mirror-branch
                <<: *default-step
                name: Mirror to Github
                script:
                    - git fetch --unshallow origin
                    - git remote add github "git@github.com:HEPTACOM/dependency-resolver.git"
                    - git push --force github ${BITBUCKET_BRANCH}
        -   step: &github-mirror-tag
                <<: *default-step
                name: Mirror tags to Github
                script:
                    - git remote add github "git@github.com:HEPTACOM/dependency-resolver.git"
                    - git push --force github tag ${BITBUCKET_TAG}
        -   step: &make-test
                <<: *default-step
                name: Run PHPUnit Tests
                script:
                    - make test
        -   step: &make-cs-composer-normalize
                <<: *default-step
                name: Analyse composer.json structure
                caches:
                    - composer
                script:
                    - make cs-composer-normalize
        -   step: &make-cs-style
                <<: *default-step
                name: Analyse PHP with Pint
                caches:
                    - composer
                script:
                    - make cs-style
        -   step: &make-cs-jq
                <<: *default-step
                name: Analyse JSON with JQ
                caches:
                    - composer
                script:
                    - make cs-jq
        -   step: &make-cs-phpmd
                <<: *default-step
                name: Analyse PHP with PHPMD
                caches:
                    - composer
                script:
                    - make cs-phpmd
        -   step: &make-cs-phpstan
                <<: *default-step
                name: Analyse PHP with PHPStan
                caches:
                    - composer
                script:
                    - make cs-phpstan
        -   step: &build-fix-and-commit
                <<: *default-step
                name: Build and fix (composer.json, Pint)
                script:
                    - make vendor
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-fix-composer-normalize
                    - |
                        if [[ $(git add -A -n | wc -l) -ne 0 ]]; then
                            git add -A
                            git commit -m "$ make cs-fix-composer-normalize"
                        fi
                    - COMPOSER_EXTRA_ARGS=-vvv make -e cs-fix-style
                    - |
                        if [[ $(git add -A -n | wc -l) -ne 0 ]]; then
                            git add -A
                            git commit -m "$ make cs-fix-style"
                        fi
                    - |
                        if [[ $(git rev-parse HEAD) != $(git rev-parse "${BITBUCKET_COMMIT}") ]]; then
                            echo "Changes get pushed, new pipeline will run later see"
                            echo "https://bitbucket.org/${BITBUCKET_REPO_FULL_NAME}/commits/"$(git rev-parse HEAD)
                            git push
                            exit 1
                        fi

pipelines:
    branches:
        main:
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-branch
            -   parallel: &checks
                    -   step: *make-cs-composer-normalize
                    -   step: *make-cs-style
                    -   step: *make-cs-jq
                    -   step: *make-cs-phpmd
                    -   step: *make-cs-phpstan
                    -   step: *make-test

        '*.*.x':
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-branch
            -   parallel: *checks

    tags:
        '*':
            -   parallel: *checks
            -   step: *github-keyword-gate-step
            -   step: *github-mirror-tag

    default:
        -   step: *build-fix-and-commit
        -   parallel: *checks
